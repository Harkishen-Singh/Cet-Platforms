{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home-screen/home-screen.component.css","webpack:///./src/app/home-screen/home-screen.component.html","webpack:///./src/app/home-screen/home-screen.component.ts","webpack:///./src/app/login-screen/login-screen.component.css","webpack:///./src/app/login-screen/login-screen.component.html","webpack:///./src/app/login-screen/login-screen.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h2 style=\\\"text-align:center;\\\">CET Platform</h2> <hr>\\n\\n  <div \\n  *ngIf=\\\"link\\\">\\n    <a routerLink=\\\"login\\\" (click)=\\\"loginClicked();\\\" \\n    >click here to login</a>\\n  </div>\\n\\n  \\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'cetplatforms';\n  public link: boolean = true;\n\n  loginClicked() {\n    console.warn('clicked')\n    this.link = false;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { LoginScreenComponent } from './login-screen/login-screen.component';\nimport { AppComponent } from './app.component';\nimport { HomeScreenComponent } from './home-screen/home-screen.component';\n\nvar routes: Routes = [\n  {\n    path:'login',\n    component: LoginScreenComponent\n  },\n  {\n    path:'home',\n    component: HomeScreenComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginScreenComponent,\n    HomeScreenComponent\n  ],\n  imports: [\n    BrowserModule,\n    // NgModule,\n    RouterModule.forRoot(routes),\n    HttpClientModule,\n    HttpModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  home-screen works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-screen',\n  templateUrl: './home-screen.component.html',\n  styleUrls: ['./home-screen.component.css']\n})\nexport class HomeScreenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".formStyling{\\n    margin:auto;\\n    display:block;\\n    margin-top: 10%;\\n    margin-right: 38%; \\n    margin-left: 38%;\\n    padding: 40px 15px 40px 15px ;\\n    border-radius: 20px;\\n    border: 2px solid pink;\\n}\"","module.exports = \"\\n<form #userLogin=ngForm class=\\\"formStyling\\\" (ngSubmit) = \\\"makeRequest(userLogin)\\\" novalidate>\\n        \\n        Username : <input type=\\\"text\\\" name=\\\"username\\\" style=\\\"border-radius:5px;\\\" ngModel> <br><br>\\n        Password : <input type=\\\"password\\\" name=\\\"password\\\" style=\\\"border-radius:5px;\\\" ngModel> <br><br>\\n        <button type=\\\"submit\\\" style=\\\"margin: auto;display: block;\\\" >Submit</button>\\n</form>\\n\\n<a routerLink= '/home'> click to go to home screen </a>\"","import { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-login-screen',\n  templateUrl: './login-screen.component.html',\n  styleUrls: ['./login-screen.component.css']\n})\nexport class LoginScreenComponent implements OnInit {\n  private url:string;\n  private userFetch: string;\n  private passFetch: string;\n\n  constructor(private fetchLoginService : Http) {\n    this.url = 'http://0.0.0.0:5000/login';\n   }\n\n  ngOnInit() {\n  }\n\n  makeRequest(da: NgForm) {\n    console.warn('entered login form submit area');\n    let data = da.value;\n    this.userFetch = data.username;\n    this.passFetch = data.password;\n    this.fetchLoginService.post(this.url, {\n      params: {\n        user: this.userFetch,\n        pass: this.passFetch\n      },\n      observe: 'response'\n    }).toPromise()\n    .then( response => {\n      console.warn('response from backend');\n      console.warn(response);\n    })\n    .catch(e => {\n      console.error('Error occured for fetching login info');\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}